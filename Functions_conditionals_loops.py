# 2.1 Создать функцию calc(a, b, operation). Описание входных параметров:
#    1. Первое число
#    2. Второе число
#    3. Действие над ними:
#      1) + Сложить
#      2) - Вычесть
#      3) * Умножить
#      4) / Разделить
#      5) В остальных случаях функция должна возвращать "Операция не поддерживается"


def calc(a, b, operation):
    # Задаем дефолтное значение возвращаемого результата
    result = 'Операция не поддерживается'

    if operation == '+':
        result = a + b
    elif operation == '-':
        result = a - b
    elif operation == '*':
        result = a * b
    elif operation == '/':
        # Проверка деления на ноль
        if b is not 0:
            result = a / b
        else:
            result = 'Деление на 0!'

    # Возвращаем результат выполнения функции
    return result


if __name__ == '__main__':
    # Проверяем корректные значения
    print(calc(30, 15, '+'))
    print(calc(30, 15, '-'))
    print(calc(30, 15, '*'))
    print(calc(30, 15, '/'))
    # Проверяем проверку деления на ноль
    print(calc(30, 0, '/'))
    # Проверяем неподдерживаемую операцию
    print(calc(30, 15, '%'))



# 2.2 Напишите программу, которая будет выводить нечетные числа из списка и остановится, если встретит число 139


#  Функция, которая проверяет входной параметр на четность
def even(num):
    # Возвращаем True, если остаток от деления на 2 равен нулю
    return num % 2 == 0


if __name__ == '__main__':
    lst = [1, 34, 78, 345, 111, 8, 5, 34, 9, 3, 139, 56, 2, 67, 69, 90]

    # В цикле перебираем элементы вышесозданного списка
    for item in lst:
        # Если текущий элемент равен 139, то прерываем цикл
        if item == 139:
            break
        # Выводим элемент, если он не является четным
        if not even(item):
            print(item)


# 2.3 Создайте список [ 18, 14, 10, 6, 2 ]  с помощью функции range()

lst = []

# Пробегаемся циклом for по последовательности, которую формирует функция range()
# Начало диапазона: 18
# Конец диапазона: 1(обратите внимание, что 1 не включается в итоговую последовательность)
# Шаг: -4(обратный шаг - двигаемся в сторону уменьшения значений)
for item in range(18, 1, -4):
    lst.append(item)

print(lst)
